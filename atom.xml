<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://blog.dennys.ink/atom.xml" rel="self"/>
  
  <link href="http://blog.dennys.ink/"/>
  <updated>2021-02-26T09:13:22.742Z</updated>
  <id>http://blog.dennys.ink/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>优雅的使用设计模式-观察者模式</title>
    <link href="http://blog.dennys.ink/2021/02/26/2021-02-26_1/"/>
    <id>http://blog.dennys.ink/2021/02/26/2021-02-26_1/</id>
    <published>2021-02-26T06:26:32.000Z</published>
    <updated>2021-02-26T09:13:22.742Z</updated>
    
    <content type="html"><![CDATA[<h4 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h4><p>观察者模式（Observer），定义对象间一种一对多的依赖关系，使得每当一个对象改变状态，则所有依赖于它的对象都会得到通知并自动更新，其主要解决一个对象状态改变给其他关联对象通知的问题，保证易用和低耦合。</p><h4 id="下面举个栗子"><a href="#下面举个栗子" class="headerlink" title="下面举个栗子"></a>下面举个栗子</h4><p>日常系统中的用户注册功能，通常注册完了会给其账号发放对应的优惠券或者邀请码，一般刚开始写代码的时候我们可能都会把发优惠券和发放邀请码的业务注入到注册逻辑中执行，例如下面的写法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> denny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> UserRegServiceImpl</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 用户注册实现类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@createTime</span> 2021-02-26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserRegServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserRegService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CouponService couponService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> InvitationCodeService invitationCodeService;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reg</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//注册业务</span></span><br><span class="line">        log.info(<span class="string">&quot;&#123;&#125;注册成功&quot;</span>, username);</span><br><span class="line">        <span class="comment">//注册成功发优惠券</span></span><br><span class="line">        couponService.addCoupon();</span><br><span class="line">        <span class="comment">//发邀请码</span></span><br><span class="line">        invitationCodeService.sendInvitationCode();</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样的写法对于业务处理来说也没啥问题无非就是会把优惠券和邀请码的一些业务耦合进来，当然像这样场景的松耦合用MQ也是可以处理的，本节我们先着重用观察者模式来演示下松耦合。</p><h5 id="1-创建一个接口UserRegService"><a href="#1-创建一个接口UserRegService" class="headerlink" title="1.创建一个接口UserRegService"></a>1.创建一个接口UserRegService</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> denny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> UserRegService</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 用户注册</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@createTime</span> 2021-02-26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserRegService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">reg</span><span class="params">(String username)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-创建一个事件UserRegEvent继承ApplicationEvent来实现我们的自定义事件"><a href="#2-创建一个事件UserRegEvent继承ApplicationEvent来实现我们的自定义事件" class="headerlink" title="2.创建一个事件UserRegEvent继承ApplicationEvent来实现我们的自定义事件"></a>2.创建一个事件UserRegEvent继承ApplicationEvent来实现我们的自定义事件</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> denny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> UserRegEvent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 用户注册事件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@createTime</span> 2021-02-26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserRegEvent</span> <span class="keyword">extends</span> <span class="title">ApplicationEvent</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用户名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructs a prototypical Event.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source The object on which the Event initially occurred.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalArgumentException if source is null.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserRegEvent</span><span class="params">(Object source)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(source);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserRegEvent</span><span class="params">(Object source, String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(source);</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-接下来创建一个接口实现类UserRegServiceImpl实现我们的注册Service和ApplicationEventPublisherAware通过实现它，来发布变更事件"><a href="#3-接下来创建一个接口实现类UserRegServiceImpl实现我们的注册Service和ApplicationEventPublisherAware通过实现它，来发布变更事件" class="headerlink" title="3.接下来创建一个接口实现类UserRegServiceImpl实现我们的注册Service和ApplicationEventPublisherAware通过实现它，来发布变更事件"></a>3.接下来创建一个接口实现类UserRegServiceImpl实现我们的注册Service和ApplicationEventPublisherAware通过实现它，来发布变更事件</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> denny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> UserRegServiceImpl</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 用户注册实现类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@createTime</span> 2021-02-26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserRegServiceImpl</span> <span class="keyword">implements</span> <span class="title">ApplicationEventPublisherAware</span>, <span class="title">UserRegService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ApplicationEventPublisher applicationEventPublisher;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApplicationEventPublisher</span><span class="params">(ApplicationEventPublisher applicationEventPublisher)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.applicationEventPublisher = applicationEventPublisher;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reg</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//注册</span></span><br><span class="line">        log.info(<span class="string">&quot;&#123;&#125;注册成功&quot;</span>, username);</span><br><span class="line">        <span class="comment">//发布</span></span><br><span class="line">        log.info(<span class="string">&quot;发布注册成功事件&quot;</span>);</span><br><span class="line">        applicationEventPublisher.publishEvent(<span class="keyword">new</span> UserRegEvent(<span class="keyword">this</span>, username));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-分别创建一个用于发送新人优惠券和发送邀请码的处理类InvitationCodeManager、CouponManager，其中InvitationCodeManager实现了ApplicationEventListener通过实现它，来监听指定类型事件并响应动作，CouponManager我们使用另一种监听方式用注解-EventListener来实现监听"><a href="#4-分别创建一个用于发送新人优惠券和发送邀请码的处理类InvitationCodeManager、CouponManager，其中InvitationCodeManager实现了ApplicationEventListener通过实现它，来监听指定类型事件并响应动作，CouponManager我们使用另一种监听方式用注解-EventListener来实现监听" class="headerlink" title="4.分别创建一个用于发送新人优惠券和发送邀请码的处理类InvitationCodeManager、CouponManager，其中InvitationCodeManager实现了ApplicationEventListener通过实现它，来监听指定类型事件并响应动作，CouponManager我们使用另一种监听方式用注解@EventListener来实现监听"></a>4.分别创建一个用于发送新人优惠券和发送邀请码的处理类InvitationCodeManager、CouponManager，其中InvitationCodeManager实现了ApplicationEventListener通过实现它，来监听指定类型事件并响应动作，CouponManager我们使用另一种监听方式用注解@EventListener来实现监听</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> denny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> InvitationCodeManager</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 发放邀请码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@createTime</span> 2021-02-26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InvitationCodeManager</span> <span class="keyword">implements</span> <span class="title">ApplicationListener</span>&lt;<span class="title">UserRegEvent</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(UserRegEvent userRegEvent)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;&#123;&#125;注册成功，开始发放邀请码...&quot;</span>, userRegEvent.getUsername());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> denny</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ClassName</span> CouponManager</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 发送新人优惠券</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@createTime</span> 2021-02-26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CouponManager</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@EventListener</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCoupon</span><span class="params">(UserRegEvent userRegEvent)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;&#123;&#125;注册成功，开始发送新人优惠券...&quot;</span>, userRegEvent.getUsername());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="5-上单测运行一下看看效果～"><a href="#5-上单测运行一下看看效果～" class="headerlink" title="5.上单测运行一下看看效果～"></a>5.上单测运行一下看看效果～</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DesignPatternApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserRegService userRegService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userRegService.reg(<span class="string">&quot;Denny&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-运行结果控制台输出对应日志"><a href="#6-运行结果控制台输出对应日志" class="headerlink" title="6.运行结果控制台输出对应日志"></a>6.运行结果控制台输出对应日志</h5><p><img src="/2021/02/26/2021-02-26_1/log.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;观察者模式&quot;&gt;&lt;a href=&quot;#观察者模式&quot; class=&quot;headerlink&quot; title=&quot;观察者模式&quot;&gt;&lt;/a&gt;观察者模式&lt;/h4&gt;&lt;p&gt;观察者模式（Observer），定义对象间一种一对多的依赖关系，使得每当一个对象改变状态，则所有依赖于它的对象都会得</summary>
      
    
    
    
    <category term="Java" scheme="http://blog.dennys.ink/categories/Java/"/>
    
    
    <category term="设计模式" scheme="http://blog.dennys.ink/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>博客刚开通</title>
    <link href="http://blog.dennys.ink/2021/02/25/%E5%8D%9A%E5%AE%A2%E5%88%9A%E5%BC%80%E9%80%9A/"/>
    <id>http://blog.dennys.ink/2021/02/25/%E5%8D%9A%E5%AE%A2%E5%88%9A%E5%BC%80%E9%80%9A/</id>
    <published>2021-02-25T03:25:51.000Z</published>
    <updated>2021-02-25T03:25:51.175Z</updated>
    
    
    
    
    
  </entry>
  
</feed>
